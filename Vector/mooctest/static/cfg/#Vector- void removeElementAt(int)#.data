[
  {
    "codes": "        } ",
    "blocks": []
  },
  {
    "codes": "        elementData[index] = obj; ",
    "blocks": []
  },
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "    public void removeElementAt(int index) { ",
    "blocks": []
  },
  {
    "codes": "        modCount++; ",
    "blocks": [0]
  },
  {
    "codes": "        if (index >= elementCount) { ",
    "blocks": [
      0,
      1
    ]
  },
  {
    "codes": "            throw new ArrayIndexOutOfBoundsException(\" >= \"); ",
    "blocks": [2]
  },
  {
    "codes": "                                                                         ",
    "blocks": []
  },
  {
    "codes": "                              ",
    "blocks": []
  },
  {
    "codes": "        } else if (index < 0) { ",
    "blocks": [
      3,
      4
    ]
  },
  {
    "codes": "            throw new ArrayIndexOutOfBoundsException(\"<0\"); ",
    "blocks": [5]
  },
  {
    "codes": "        } ",
    "blocks": []
  },
  {
    "codes": "        int j = elementCount - index - 1; ",
    "blocks": [6]
  },
  {
    "codes": "        if (j > 0) { ",
    "blocks": [
      6,
      7
    ]
  },
  {
    "codes": "            for (int i = 0; i < j; i++) { ",
    "blocks": [
      8,
      9,
      10,
      11
    ]
  },
  {
    "codes": "                elementData[index + i] = elementData[index + i + 1]; ",
    "blocks": [11]
  },
  {
    "codes": "            } ",
    "blocks": [11]
  },
  {
    "codes": "                                                                                ",
    "blocks": []
  },
  {
    "codes": "        } ",
    "blocks": []
  },
  {
    "codes": "        elementCount--; ",
    "blocks": [12]
  },
  {
    "codes": "        elementData[elementCount] = null;                             ",
    "blocks": [12]
  },
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "    public synchronized void addElement(E obj) { ",
    "blocks": []
  },
  {
    "codes": "        modCount++; ",
    "blocks": []
  }
]