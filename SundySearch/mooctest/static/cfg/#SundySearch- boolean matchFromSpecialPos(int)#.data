[
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": "        ",
    "blocks": []
  },
  {
    "codes": "                                                ",
    "blocks": []
  },
  {
    "codes": "        ",
    "blocks": []
  },
  {
    "codes": "    public boolean matchFromSpecialPos(int pos) { ",
    "blocks": []
  },
  {
    "codes": "        if ((text.length()-pos) < pattern.length()) { ",
    "blocks": [
      0,
      1
    ]
  },
  {
    "codes": "            return false; ",
    "blocks": [2]
  },
  {
    "codes": "        } ",
    "blocks": []
  },
  {
    "codes": "        for (int i = 0; i < pattern.length(); i++) { ",
    "blocks": [
      3,
      4,
      5,
      13
    ]
  },
  {
    "codes": "            if (text.charAt(pos + i) == pattern.charAt(i)) { ",
    "blocks": [
      6,
      7,
      13
    ]
  },
  {
    "codes": "                if (i == (pattern.length()-1)) { ",
    "blocks": [
      8,
      9,
      13
    ]
  },
  {
    "codes": "                    return true; ",
    "blocks": [
      10,
      13
    ]
  },
  {
    "codes": "                } ",
    "blocks": [13]
  },
  {
    "codes": "                continue; ",
    "blocks": [
      11,
      13
    ]
  },
  {
    "codes": "            } else { ",
    "blocks": [13]
  },
  {
    "codes": "                break; ",
    "blocks": [
      12,
      13
    ]
  },
  {
    "codes": "            } ",
    "blocks": [13]
  },
  {
    "codes": "        } ",
    "blocks": [13]
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "        return false; ",
    "blocks": [14]
  },
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": "   ",
    "blocks": []
  },
  {
    "codes": "} ",
    "blocks": []
  }
]