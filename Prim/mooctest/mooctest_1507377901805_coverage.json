{"<NodeNetwork: void setNodes(java.util.List)>":{"PrimTest : testPrim":[0],"PrimTest : testPrintWholeCaravaneWithPrim":[0],"PrimTest : testFindWholeCaravaneWithPrim":[0]},"<Node: java.lang.String getName()>":{"NodeTest : testGetName":[0],"NodeTest : testAddPathWithoutSource":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"NodeTest : testEqualsObject":[0,0,0,0],"NodeTest : testGetPaths":[0]},"<Path: void setSrcNode(Node)>":{"NodeTest : testAddPathWithoutSource":[0]},"<NodeNetwork: java.util.List getNodes()>":{"PrimTest : testPrintWholeCaravaneWithPrim":[0],"PrimTest : testFindWholeCaravaneWithPrim":[0]},"<Prim: void <init>(NodeNetwork)>":{"PrimTest : testPrim":[0,0],"PrimTest : testPrintWholeCaravaneWithPrim":[0],"PrimTest : testFindWholeCaravaneWithPrim":[0]},"<Prim: java.util.List findWholeCaravaneWithPrim()>":{"PrimTest : testFindWholeCaravaneWithPrim":[0,1,3]},"<Node: void addPathWithoutSource(Path)>":{"NodeTest : testAddPathWithoutSource":[0,1,3,0,2,3]},"<Path: int getWeight()>":{"NodeTest : testAddPathWithoutSource":[0,0]},"<Path: boolean equals(java.lang.Object)>":{"NodeTest : testAddPathWithoutSource":[0,1,2,6,7,8,11,0,1,2,6,7,8,11,0,1,2,3,4,5,10,0,1,2,6,7,8,11,0,1,2,3,4,5,10]},"<Node: void <init>(java.lang.String)>":{"PathTest : testEqualsObject":[0,0],"NodeTest : testAddPathWithoutSource":[0,0,0],"NodeTest : testEqualsObject":[0,0,0],"NodeTest : testGetPaths":[0,0,0],"PathTest : testGetDestinationNode":[0,0],"NodeTest : testNodeStringPathArray":[0,0,0],"PathTest : testGetSrcNode":[0,0],"PathTest : testPathIntNodeNode":[0,0],"PathTest : testSetSrcNode":[0,0],"PathTest : testPathIntNode":[0,0],"PathTest : testGetWeight":[0,0],"NodeTest : testGetName":[0,0,0],"NodeTest : testNodeString":[0,0,0]},"<Path: Node getDestinationNode()>":{"NodeTest : testAddPathWithoutSource":[0,0,0,0,0,0,0,0,0]},"<Path: void <init>(int,Node,Node)>":{"NodeTest : testNodeStringPathArray":[0,0,0],"NodeTest : testNodeString":[0,0,0],"NodeTest : testGetName":[0,0,0],"NodeTest : testAddPathWithoutSource":[0,0,0,0,0],"NodeTest : testEqualsObject":[0,0,0],"NodeTest : testGetPaths":[0,0,0]},"<Path: void <init>(int,Node)>":{"NodeTest : testNodeStringPathArray":[0],"NodeTest : testNodeString":[0],"NodeTest : testGetName":[0],"NodeTest : testAddPathWithoutSource":[0],"NodeTest : testEqualsObject":[0],"NodeTest : testGetPaths":[0]},"<Path: Node getSrcNode()>":{"NodeTest : testAddPathWithoutSource":[0,0,0,0,0,0,0,0,0,0]},"<Node: boolean equals(java.lang.Object)>":{"NodeTest : testAddPathWithoutSource":[0,1,2,5,0,1,2,3,4,0,1,2,5,0,1,2,5,0,1,2,3,4,0,1,2,5,0,1,2,3,4,0,1,2,3,4,0,1,2,5,0,1,2,3,4,0,1,2,5,0,1,2,3,4,0,1,2,3,4],"NodeTest : testEqualsObject":[0,5,0,1,2,3,4,0,1,2,5,0,5]},"<Node: void addPathWithSource(Path)>":{"NodeTest : testAddPathWithoutSource":[0,2,0,2,0,1,3,3,3,0,1,3]},"<Prim: void printWholeCaravaneWithPrim()>":{"PrimTest : testPrintWholeCaravaneWithPrim":[0,1,3]},"<NodeNetwork: void <init>()>":{"PrimTest : testPrim":[0],"PrimTest : testPrintWholeCaravaneWithPrim":[0],"PrimTest : testFindWholeCaravaneWithPrim":[0]}}