[
  {
    "codes": "     ",
    "blocks": []
  },
  {
    "codes": "                                                                       ",
    "blocks": []
  },
  {
    "codes": "                      ",
    "blocks": []
  },
  {
    "codes": "     ",
    "blocks": []
  },
  {
    "codes": "\tpublic Fact toFact() { ",
    "blocks": []
  },
  {
    "codes": "\t\tValue[] values = new Value[this.arguments.length]; ",
    "blocks": [0]
  },
  {
    "codes": "\t\tfor (int i = 0; i < this.arguments.length; i++) { ",
    "blocks": [
      0,
      1,
      2,
      7,
      8
    ]
  },
  {
    "codes": "\t\t\tif (this.arguments[i].isValue()) { ",
    "blocks": [
      3,
      4,
      5,
      7,
      8
    ]
  },
  {
    "codes": "\t\t\t\tvalues[i] = this.arguments[i].getValue(); ",
    "blocks": [
      5,
      7,
      8
    ]
  },
  {
    "codes": "\t\t\t} else { ",
    "blocks": [
      5,
      7,
      8
    ]
  },
  {
    "codes": "\t\t\t\treturn null; ",
    "blocks": [
      5,
      6,
      7,
      8
    ]
  },
  {
    "codes": "\t\t\t} ",
    "blocks": [
      5,
      7,
      8
    ]
  },
  {
    "codes": "\t\t} ",
    "blocks": [
      7,
      8
    ]
  },
  {
    "codes": "\t\treturn new Fact(this.predicate, values); ",
    "blocks": [8]
  },
  {
    "codes": "\t} ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "\tpublic String toString() { ",
    "blocks": []
  },
  {
    "codes": "\t\tString res = this.predicate.toString(); ",
    "blocks": []
  },
  {
    "codes": "\t\tres += \"(\"; ",
    "blocks": []
  }
]