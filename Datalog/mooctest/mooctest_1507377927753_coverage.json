{"<Datalog: Fact toFact()>":{"DatalogTest : testToFact":[0,1,3,6]},"<Predicate: boolean equals(java.lang.Object)>":{"DatalogTest : testCompatibleWith":[0,1,3,4,5],"RuleTest : testGetHead":[0,1,3,4,5],"DatalogTest : testSubstituteTo":[0,1,3,4,5],"PredicateTest : testEqualsObject":[0,2,0,1,3,6,0,1,3,4,5],"DatalogTest : testEqualsObject":[0,1,3,4,5],"DatalogTest : testGetPredicate":[0,1,3,4,5]},"<Substitution: Substitution extend(Variable,Value)>":{"DatalogTest : testCompatibleWith":[0,1,5],"DatalogTest : testSubstituteTo":[0,1,5]},"<Argument: Variable getVariable()>":{"ArgumentTest : testGetVariable":[0],"DatalogTest : testCompatibleWith":[0],"DatalogTest : testSubstituteTo":[0]},"<Substitution: void <init>(java.util.LinkedList,java.util.LinkedList)>":{"DatalogTest : testCompatibleWith":[0],"DatalogTest : testSubstituteTo":[0]},"<Value: boolean equals(java.lang.Object)>":{"ValueTest : test":[0,1,3,6],"ArgumentTest : testToString":[0,1,3,6],"DatalogTest : testCompatibleWith":[0,1,3,4,5],"DatalogTest : testSubstituteTo":[0,1,3,4,5],"ArgumentTest : testGetValue":[0,1,3,4,5]},"<Variable: java.lang.String getIdentifier()>":{"VariableTest : testGetIdentifier":[0]},"<Argument: void <init>(Value,Variable,boolean)>":{"ArgumentTest : testGetVariable":[0],"DatalogTest : testEqualsObject":[0,0],"RuleTest : testToString":[0,0],"DatalogTest : testGetArgumentsaaa":[0,0],"DatalogTest : testHashCode":[0,0],"DatalogTest : testToFact":[0,0],"ArgumentTest : testGetValue":[0],"ArgumentTest : testValue":[0,0,0],"ProgramTest : testDeriveAll":[0,0],"ArgumentTest : testIsVariable":[0],"RuleTest : testDeriveOnce":[0,0],"DatalogTest : testCompatibleWith":[0,0],"RuleTest : testGetHead":[0,0],"DatalogTest : testSubstituteTo":[0,0],"DatalogTest : testDatalog":[0,0],"ProgramTest : testCanDerive":[0,0],"DatalogTest : testGetPredicate":[0,0],"ProgramTest : testQuery":[0,0],"ProgramTest : testGetProgram":[0,0],"ArgumentTest : testVariable":[0,0,0],"RuleTest : testGetBody":[0,0],"RuleTest : testRule":[0,0],"ArgumentTest : testToString":[0,0],"ArgumentTest : testIsValue":[0],"DatalogTest : testToString":[0,0],"ProgramTest : testProgram":[0,0]},"<Datalog: Substitution substituteTo(Fact)>":{"DatalogTest : testCompatibleWith":[0,1,3,4,6,7,9,15,16,18,7,9,10,11,13],"DatalogTest : testSubstituteTo":[0,1,3,4,6,7,9,15,16,18,7,9,10,11,13]},"<Variable: int hashCode()>":{"VariableTest : testHashCode":[0]},"<Predicate: int hashCode()>":{"DatalogTest : testHashCode":[0],"PredicateTest : testHashCode":[0]},"<Predicate: java.lang.String toString()>":{"RuleTest : testToString":[0,0,0],"PredicateTest : testToString":[0],"DatalogTest : testToString":[0]},"<Argument: Argument value(Value)>":{"ArgumentTest : testValue":[0]},"<Datalog: Argument[] getArguments()>":{"DatalogTest : testGetArgumentsaaa":[0]},"<Variable: boolean equals(java.lang.Object)>":{"ArgumentTest : testGetVariable":[0,1,3,4,5],"VariableTest : testEqualsObject":[0,1,3,6,0,1,3,6,0,1,3,4,5]},"<Argument: java.lang.String toString()>":{"ArgumentTest : testValue":[0,1,2,0,1,2],"ArgumentTest : testVariable":[0,3,0,3],"ArgumentTest : testToString":[0,1,2],"RuleTest : testToString":[0,3,0,1,2,0,3,0,1,2,0,3,0,1,2],"DatalogTest : testToString":[0,3,0,1,2]},"<Argument: Argument variable(Variable)>":{"ArgumentTest : testVariable":[0]},"<Datalog: boolean equals(java.lang.Object)>":{"RuleTest : testGetHead":[0,1,3,4,5,6,7,8,10,11],"DatalogTest : testEqualsObject":[0,2,0,1,3,4,5,6,7,8,10,11,0,1,3,12]},"<Datalog: boolean compatibleWith(Fact)>":{"DatalogTest : testCompatibleWith":[0,1,2,4]},"<Value: java.lang.String toString()>":{"ArgumentTest : testValue":[0,0],"ArgumentTest : testToString":[0,0],"ValueTest : testToString":[0],"RuleTest : testToString":[0,0,0],"DatalogTest : testToString":[0]},"<Datalog: Predicate getPredicate()>":{"DatalogTest : testGetPredicate":[0]},"<Variable: void <init>(java.lang.String)>":{"ArgumentTest : testGetVariable":[0,1,3],"DatalogTest : testEqualsObject":[0,1,3],"RuleTest : testToString":[0,1,3],"DatalogTest : testGetArgumentsaaa":[0,1,3],"DatalogTest : testHashCode":[0,1,3],"DatalogTest : testToFact":[0,1,3],"ArgumentTest : testGetValue":[0,1,3],"VariableTest : testHashCode":[0,1,3],"ArgumentTest : testValue":[0,1,3],"ArgumentTest : testIsVariable":[0,1,3],"ProgramTest : testDeriveAll":[0,1,3],"RuleTest : testDeriveOnce":[0,1,3],"VariableTest : testVariable":[0,1,3,0,2],"DatalogTest : testCompatibleWith":[0,1,3],"RuleTest : testGetHead":[0,1,3],"DatalogTest : testSubstituteTo":[0,1,3],"DatalogTest : testDatalog":[0,1,3],"ProgramTest : testCanDerive":[0,1,3],"VariableTest : testToString":[0,1,3],"DatalogTest : testGetPredicate":[0,1,3],"ProgramTest : testQuery":[0,1,3],"ProgramTest : testGetProgram":[0,1,3],"VariableTest : testGetIdentifier":[0,1,3],"ArgumentTest : testVariable":[0,1,3],"RuleTest : testRule":[0,1,3],"RuleTest : testGetBody":[0,1,3],"ArgumentTest : testToString":[0,1,3],"ArgumentTest : testIsValue":[0,1,3],"DatalogTest : testToString":[0,1,3],"VariableTest : testEqualsObject":[0,1,3],"ProgramTest : testProgram":[0,1,3]},"<Fact: Value[] getValues()>":{"DatalogTest : testCompatibleWith":[0,0,0,0,0],"DatalogTest : testSubstituteTo":[0,0,0,0,0]},"<Value: void <init>(java.lang.String)>":{"ValueTest : test":[0,1,3,0,1,3,0,2],"ArgumentTest : testGetVariable":[0,1,3],"ValueTest : testToString":[0,1,3],"DatalogTest : testEqualsObject":[0,1,3],"RuleTest : testToString":[0,1,3],"DatalogTest : testGetArgumentsaaa":[0,1,3],"DatalogTest : testHashCode":[0,1,3],"DatalogTest : testToFact":[0,1,3],"ArgumentTest : testGetValue":[0,1,3],"ArgumentTest : testValue":[0,1,3],"ProgramTest : testDeriveAll":[0,1,3],"ArgumentTest : testIsVariable":[0,1,3],"RuleTest : testDeriveOnce":[0,1,3],"DatalogTest : testCompatibleWith":[0,1,3,0,1,3,0,1,3],"RuleTest : testGetHead":[0,1,3],"DatalogTest : testSubstituteTo":[0,1,3,0,1,3,0,1,3],"DatalogTest : testDatalog":[0,1,3],"ProgramTest : testCanDerive":[0,1,3],"DatalogTest : testGetPredicate":[0,1,3],"ProgramTest : testQuery":[0,1,3],"ProgramTest : testGetProgram":[0,1,3],"ArgumentTest : testVariable":[0,1,3],"ValueTest : testHashCode":[0,1,3],"RuleTest : testRule":[0,1,3],"RuleTest : testGetBody":[0,1,3],"ArgumentTest : testToString":[0,1,3],"ArgumentTest : testIsValue":[0,1,3],"DatalogTest : testToString":[0,1,3],"ProgramTest : testProgram":[0,1,3]},"<Variable: java.lang.String toString()>":{"ArgumentTest : testVariable":[0,0],"VariableTest : testToString":[0],"RuleTest : testToString":[0,0,0],"DatalogTest : testToString":[0]},"<Predicate: java.lang.String getName()>":{"PredicateTest : testGetName":[0]},"<Datalog: void <init>(Predicate,Argument[])>":{"ProgramTest : testDeriveAll":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6],"RuleTest : testDeriveOnce":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6],"DatalogTest : testCompatibleWith":[0,1,3,4,6],"RuleTest : testGetHead":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6],"DatalogTest : testSubstituteTo":[0,1,3,4,6],"ProgramTest : testCanDerive":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6],"DatalogTest : testDatalog":[0,1,3,4,6,0,2,0,1,3,4,6],"DatalogTest : testEqualsObject":[0,1,3,4,6],"RuleTest : testToString":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6],"DatalogTest : testGetPredicate":[0,1,3,4,6],"ProgramTest : testQuery":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6],"ProgramTest : testGetProgram":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6],"DatalogTest : testGetArgumentsaaa":[0,1,3,4,6],"DatalogTest : testHashCode":[0,1,3,4,6],"RuleTest : testRule":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6],"RuleTest : testGetBody":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6],"DatalogTest : testToFact":[0,1,3,4,6],"DatalogTest : testToString":[0,1,3,4,6],"ProgramTest : testProgram":[0,1,3,4,6,0,1,3,4,6,0,1,3,4,6]},"<Datalog: int hashCode()>":{"DatalogTest : testHashCode":[0]},"<Value: java.lang.String getValue()>":{"ValueTest : test":[0]},"<Fact: void <init>(Predicate,Value[])>":{"DatalogTest : testCompatibleWith":[0,1,3,4,6],"DatalogTest : testSubstituteTo":[0,1,3,4,6]},"<Predicate: void <init>(java.lang.String)>":{"ProgramTest : testDeriveAll":[0,1,3],"RuleTest : testDeriveOnce":[0,1,3],"PredicateTest : testGetName":[0,1,3],"DatalogTest : testCompatibleWith":[0,1,3,0,1,3],"RuleTest : testGetHead":[0,1,3],"DatalogTest : testSubstituteTo":[0,1,3,0,1,3],"ProgramTest : testCanDerive":[0,1,3],"DatalogTest : testDatalog":[0,1,3],"DatalogTest : testEqualsObject":[0,1,3],"RuleTest : testToString":[0,1,3],"PredicateTest : testHashCode":[0,1,3],"DatalogTest : testGetPredicate":[0,1,3],"ProgramTest : testQuery":[0,1,3],"ProgramTest : testGetProgram":[0,1,3],"DatalogTest : testGetArgumentsaaa":[0,1,3],"DatalogTest : testHashCode":[0,1,3],"RuleTest : testRule":[0,1,3],"RuleTest : testGetBody":[0,1,3],"PredicateTest : testPredicate":[0,1,3,0,2],"DatalogTest : testToFact":[0,1,3],"PredicateTest : testEqualsObject":[0,1,3],"PredicateTest : testToString":[0,1,3],"DatalogTest : testToString":[0,1,3],"VariableTest : testEqualsObject":[0,1,3],"ProgramTest : testProgram":[0,1,3]},"<Fact: Predicate getPredicate()>":{"DatalogTest : testCompatibleWith":[0],"DatalogTest : testSubstituteTo":[0]},"<Argument: boolean isVariable()>":{"ArgumentTest : testIsVariable":[0,1,2,4]},"<Value: int hashCode()>":{"ValueTest : testHashCode":[0]},"<Datalog: java.lang.String toString()>":{"RuleTest : testToString":[0,1,3,1,2,4,6,7,0,1,3,1,2,4,6,7,0,1,3,1,2,4,6,7],"DatalogTest : testToString":[0,1,3,1,2,4,6,7]},"<Argument: boolean isValue()>":{"DatalogTest : testCompatibleWith":[0,0],"DatalogTest : testToFact":[0],"DatalogTest : testSubstituteTo":[0,0],"ArgumentTest : testIsValue":[0]},"<Substitution: void <init>()>":{"DatalogTest : testCompatibleWith":[0],"DatalogTest : testSubstituteTo":[0]},"<Argument: Value getValue()>":{"DatalogTest : testCompatibleWith":[0],"DatalogTest : testSubstituteTo":[0],"ArgumentTest : testGetValue":[0]}}