[
  {
    "codes": "        } ",
    "blocks": []
  },
  {
    "codes": "        return TextUtils.arraysConvert(tmp, 2); ",
    "blocks": []
  },
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "    private void setFromJD(double jd, boolean utc) { ",
    "blocks": []
  },
  {
    "codes": "        if (utc) ",
    "blocks": [
      0,
      1
    ]
  },
  {
    "codes": "            jd -= this.deltaT2(jd - J2000); ",
    "blocks": [
      0,
      2
    ]
  },
  {
    "codes": "        jd += 0.5; ",
    "blocks": [
      0,
      3
    ]
  },
  {
    "codes": " ",
    "blocks": [0]
  },
  {
    "codes": "        double a = int2(jd); ",
    "blocks": [
      0,
      3
    ]
  },
  {
    "codes": "        double d; ",
    "blocks": [0]
  },
  {
    "codes": " ",
    "blocks": [0]
  },
  {
    "codes": "        if (a > 2299161) { ",
    "blocks": [
      0,
      3,
      4
    ]
  },
  {
    "codes": "            d = int2((a - 1867216.25) / 36524.25); ",
    "blocks": [
      0,
      5
    ]
  },
  {
    "codes": "            a += 1 + d - int2(d / 4); ",
    "blocks": [
      0,
      5
    ]
  },
  {
    "codes": "        } ",
    "blocks": [0]
  },
  {
    "codes": "        a += 1524; ",
    "blocks": [
      0,
      6
    ]
  },
  {
    "codes": "        double y = int2((a - 122.1) / 365.25); ",
    "blocks": [
      0,
      6
    ]
  },
  {
    "codes": "        d = a - int2(365.25 * y); ",
    "blocks": [
      0,
      6
    ]
  },
  {
    "codes": "        double m = int2(d / 30.6001); ",
    "blocks": [
      0,
      6
    ]
  },
  {
    "codes": "        this.D = d - int2(m * 30.6001); ",
    "blocks": [
      0,
      6
    ]
  },
  {
    "codes": "        y -= 4716; ",
    "blocks": [0]
  },
  {
    "codes": "        m--; ",
    "blocks": [
      0,
      6
    ]
  },
  {
    "codes": "        if (m > 12) ",
    "blocks": [
      0,
      6,
      7
    ]
  },
  {
    "codes": "            m -= 12; ",
    "blocks": [
      0,
      8
    ]
  },
  {
    "codes": "        if (m <= 2) ",
    "blocks": [
      0,
      9,
      10
    ]
  },
  {
    "codes": "                                            ",
    "blocks": [0]
  },
  {
    "codes": "            y++; ",
    "blocks": [
      0,
      11,
      12
    ]
  },
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "    private double int2(double v) { ",
    "blocks": []
  },
  {
    "codes": "        v = Math.floor(v); ",
    "blocks": []
  },
  {
    "codes": "        if (v < 0) ",
    "blocks": []
  }
]