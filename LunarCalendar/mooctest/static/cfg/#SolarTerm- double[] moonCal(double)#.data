[
  {
    "codes": "        double[] moon = moonCal(t); ",
    "blocks": []
  },
  {
    "codes": "        return rad2mrad(jiao - (moon[0] - sun[0])); ",
    "blocks": []
  },
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "    private double[] moonCal(double jd) { ",
    "blocks": []
  },
  {
    "codes": "        MnnT = jd / 36525; ",
    "blocks": [0]
  },
  {
    "codes": "        double t1 = MnnT, t2 = t1 * t1, t3 = t2 * t1, t4 = t3 * t1; ",
    "blocks": [0]
  },
  {
    "codes": "        double[] llr = new double[3]; ",
    "blocks": [0]
  },
  {
    "codes": "        llr[0] = (Mnn(M10) + Mnn(M11) * t1 + Mnn(M12) * t2) / rad; ",
    "blocks": [0]
  },
  {
    "codes": "        llr[1] = (Mnn(M20) + Mnn(M21) * t1) / rad; ",
    "blocks": [0]
  },
  {
    "codes": "        llr[2] = (Mnn(M30) + Mnn(M31) * t1) * 0.999999949827; ",
    "blocks": [0]
  },
  {
    "codes": "        llr[0] = llr[0] + M1n[0] + M1n[1] * t1 + M1n[2] * t2 + M1n[3] * t3 + M1n[4] * t4; ",
    "blocks": [0]
  },
  {
    "codes": "        llr[0] = rad2mrad(llr[0]); ",
    "blocks": [0]
  },
  {
    "codes": "        addPrece(jd, llr); ",
    "blocks": [0]
  },
  {
    "codes": "        return llr; ",
    "blocks": [0]
  },
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "    private void addPrece(double jd, double[] zb) { ",
    "blocks": []
  },
  {
    "codes": "        int i; ",
    "blocks": []
  },
  {
    "codes": "        double t = 1, v = 0, t1 = jd / 365250; ",
    "blocks": []
  }
]