[
  {
    "codes": "                       ",
    "blocks": []
  },
  {
    "codes": "                       ",
    "blocks": []
  },
  {
    "codes": "                           ",
    "blocks": []
  },
  {
    "codes": "        ",
    "blocks": []
  },
  {
    "codes": "    static Set<Integer> buildMonthWeekend(int year, int month) { ",
    "blocks": []
  },
  {
    "codes": "        Set<Integer> set = new HashSet<Integer>(); ",
    "blocks": [0]
  },
  {
    "codes": "        calendar.clear(); ",
    "blocks": [0]
  },
  {
    "codes": "                                     ",
    "blocks": []
  },
  {
    "codes": "        calendar.set(year, month - 1, 1); ",
    "blocks": [0]
  },
  {
    "codes": "        do { ",
    "blocks": []
  },
  {
    "codes": "            int day = calendar.get(Calendar.DAY_OF_WEEK); ",
    "blocks": [1]
  },
  {
    "codes": "            if (day == Calendar.SATURDAY || day == Calendar.SUNDAY) { ",
    "blocks": [
      1,
      2,
      3,
      4
    ]
  },
  {
    "codes": "                set.add(calendar.get(Calendar.DAY_OF_MONTH)); ",
    "blocks": [5]
  },
  {
    "codes": "            } ",
    "blocks": []
  },
  {
    "codes": "            calendar.add(Calendar.DAY_OF_YEAR, 1); ",
    "blocks": [6]
  },
  {
    "codes": "        } while (calendar.get(Calendar.MONTH) == month - 1); ",
    "blocks": [
      6,
      7
    ]
  },
  {
    "codes": "        return set; ",
    "blocks": [8]
  },
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "        ",
    "blocks": []
  },
  {
    "codes": "                         ",
    "blocks": []
  },
  {
    "codes": "       ",
    "blocks": []
  }
]